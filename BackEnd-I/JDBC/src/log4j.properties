# Logger con opcion root
#Esta línea configura el nivel de registro raíz (rootLogger) en DEBUG. Esto significa que se registrarán mensajes de nivel DEBUG y niveles superiores. Además, especifica que los registros se enviarán a dos destinos diferentes: stdout (consola) y file (archivo de texto).
log4j.rootLogger=DEBUG,stdout,file
log4j.logger.infoLogger=DEBUG
log4j.additivity.infoLogger = false

# Redirigir mensajes por consola
#Indica que las siguientes líneas de configuración son para el apéndice (destino) de la consola.
#Define un nuevo apéndice llamado stdout que envía los registros a la consola.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#Indica que la salida del apéndice stdout se enviará a System.out, que es la consola estándar.
log4j.appender.stdout.Target=System.out
#Configura el diseño (formato) de la salida del apéndice stdout utilizando PatternLayout, lo que permite especificar un patrón para formatear los registros.
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#Define el patrón de conversión para el diseño del apéndice stdout. Este patrón formatea la salida del registro con la fecha, el nivel de registro, el nombre de la clase (recortado a solo el último componente), el número de línea y el mensaje del registro.
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n
#- [%d{yyyy-MM-dd HH:mm:ss}: representa la fecha y la hora del registro en el formato especificado. Aquí, yyyy representa el año, MM el mes, dd el día, HH la hora (formato de 24 horas), mm los minutos y ss los segundos.
#-[%-5p]: nivel de prioridad del registro. %p indica el nivel de prioridad del registro, y -5 indica que el nivel se alineará a la izquierda en un campo de ancho de 5 caracteres. En caso de que el nivel de prioridad sea más corto que 5 caracteres, se completará con espacios en blanco a la derecha.
#- [%c{1}:%L]: nombre de la clase y el número de línea del registro. %c representa el nombre de la clase del registro, {1} limita el nombre de la clase a solo el último componente después del último punto (esto se conoce como "simple name"). %L representa el número de línea donde ocurrió el registro.
#%m: Esto representa el mensaje del registro en sí mismo.
#%n: Esto representa una nueva línea en el registro, asegurando que el próximo registro esté en una nueva línea.

# Redirigir los mensajes a un fichero de texto
#las siguientes líneas son para configurar el apéndice de archivo de texto.
#Define un nuevo apéndice llamado file que envía los registros a un archivo de registro
log4j.appender.file=org.apache.log4j.RollingFileAppender
#Especifica el nombre del archivo de registro como logfile.log.
log4j.appender.file.File=logfile.log
#Establece el tamaño máximo del archivo de registro en 5 megabytes. Una vez que el archivo alcanza este tamaño, se crea un nuevo archivo de registro.
log4j.appender.file.MaxFileSize=5MB
#Indica que se deben mantener hasta 10 archivos de registro de respaldo. Una vez que se alcanza este número, los archivos de registro más antiguos se eliminarán para dejar espacio para los nuevos registros.
log4j.appender.file.MaxBackupIndex=10
#Al igual que con el apéndice de consola, configura el diseño del apéndice de archivo utilizando PatternLayout.
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#Define el patrón de conversión para el diseño del apéndice de archivo. Este patrón es similar al de la consola, pero también incluye la fecha y hora de registro.
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n

