spring.application.name=Clinica-MVC

#LOGGING
logging.level.root=INFO

#appender consola
logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%highlight(%-5level)] [%cyan(%thread)] %magenta(%logger{15}) - %msg%n

#configuracion de h2
#spring.h2.console.enabled=true
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:~/clinicaodontologica
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#configuracion de MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/clinicaodontologica
#spring.datasource.username=root
#spring.datasource.password=Colorverde3101*
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# configuracion de MySQL con deploy
spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.user.datasource.driver-class-name=com.mysql.jdbc.driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true